apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-external-user-transformer
  namespace: kafka
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: demo-external-user-transformer
  namespace: kafka
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    resourceNames: [ "demo-external-user", "my-cluster-cluster-ca-cert" ]
    verbs: [ "get", "list", "watch" ]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: demo-external-user-transformer
  namespace: demo-external
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    resourceNames: [ "kafka-broker-secret" ]
    verbs: [ "create", "delete", "update", "patch", "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    resourceNames: [ "kafka-broker-config" ]
    verbs: [ "create", "delete", "update", "patch", "get", "list", "watch" ]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: demo-external-user-transformer
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: demo-external-user-transformer
subjects:
  - kind: ServiceAccount
    name: demo-external-user-transformer
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: demo-external-user-transformer
  namespace: demo-external
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: demo-external-user-transformer
subjects:
  - kind: ServiceAccount
    name: demo-external-user-transformer
    namespace: kafka
---
apiVersion: templates.kluctl.io/v1alpha1
kind: ObjectTemplate
metadata:
  name: demo-external-user-transformer
  namespace: kafka
spec:
  serviceAccountName: demo-external-user-transformer
  prune: true
  interval: 5m
  matrix:
    - name: user_secret
      object:
        ref:
          apiVersion: v1
          kind: Secret
          name: demo-external-user
          namespace: kafka
    - name: cluster_ca_secret
      object:
        ref:
          apiVersion: v1
          kind: Secret
          name: my-cluster-cluster-ca-cert
          namespace: kafka
  templates:
    - object:
        apiVersion: v1
        kind: Secret
        metadata:
          name: "kafka-broker-secret"
          namespace: "demo-external"
        stringData:
          protocol: "SSL"
          ca.crt: "{{ matrix.cluster_ca_secret.data['ca.crt'] | b64decode }}"
          user.crt: "{{ matrix.user_secret.data['user.crt'] | b64decode }}"
          user.key: "{{ matrix.user_secret.data['user.key'] | b64decode }}"
    - object:
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: "kafka-broker-config"
          namespace: "demo-external"
        data:
          # Number of topic partitions
          default.topic.partitions: "10"
          # Replication factor of topic messages.
          default.topic.replication.factor: "3"
          # A comma separated list of bootstrap servers. (It can be in or out the k8s cluster)
          bootstrap.servers: "my-cluster-kafka-bootstrap.kafka:9092"
          # Secret name for authentication
          auth.secret.ref.name: "kafka-broker-secret"
