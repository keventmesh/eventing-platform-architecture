apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  namespace: kafka
spec:
  kafka:
    version: 3.5.0
    replicas: 3
    listeners:
      - name: mtls
        port: 9092
        type: internal
        tls: true
        authentication:
          type: tls
      - name: sasl
        port: 9093
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
    authorization:
      type: simple

    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      log.message.format.version: "3.5"
      inter.broker.protocol.version: "3.5"
      auto.create.topics.enable: false
      min.insync.replicas: "2"
      default.replication.factor: 3

    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5

    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml

    storage:
      type: persistent-claim
      size: 100Gi
      deleteClaim: true

    resources:
      requests:
        memory: 1Gi
        cpu: "300m"

    template:
      pod:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - my-cluster-kafka
                topologyKey: "kubernetes.io/hostname"

  zookeeper:
    replicas: 3
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5

    storage:
      type: persistent-claim
      size: 50Gi
      deleteClaim: true

    resources:
      requests:
        memory: 500Mi
        cpu: 300m

    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml

    template:
      pod:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - my-cluster-zookeeper
                topologyKey: "kubernetes.io/hostname"

  entityOperator:

    topicOperator:
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
        limits:
          cpu: 1
          memory: 1Gi

    userOperator:
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
        limits:
          cpu: 1
          memory: 1Gi

  kafkaExporter:
    resources:
      requests:
        cpu: 50m
        memory: 256Mi
      limits:
        cpu: 1
        memory: 1Gi
    topicRegex: ".*"
    groupRegex: ".*"
